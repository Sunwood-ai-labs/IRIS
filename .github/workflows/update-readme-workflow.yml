name: リリース後のREADME更新

on:
  release:
    types: [published]

permissions:
  contents: write
  pull-requests: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: リポジトリのチェックアウト
        uses: actions/checkout@v3

      - name: Pythonのセットアップ
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: 依存関係のインストール
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/requirements.txt

      - name: READMEの更新
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          YOUR_PERSONAL_ACCESS_TOKEN: ${{ secrets.YOUR_PERSONAL_ACCESS_TOKEN }}
          YOUR_PERSONAL_ACCESS_TOKEN_IRIS: ${{ secrets.YOUR_PERSONAL_ACCESS_TOKEN_IRIS }}
          
        run: python .github/scripts/update_readme.py

      - name: 変更があれば新しいブランチを作成してプッシュ
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git checkout -b update-readme-${{ github.run_id }}
          git add README.md
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "📝 リリース後のREADME更新"
            git push --set-upstream origin update-readme-${{ github.run_id }}
          fi

      - name: プルリクエストの作成
        if: success()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 📝 リリース後のREADME更新
          title: 📝 リリース後のREADME自動更新
          body: |
            このプルリクエストは、最新のリリースに基づいてREADMEを自動更新したものです。
            内容を確認し、問題がなければマージしてください。
          branch: update-readme-${{ github.run_id }}
          base: main
          labels: documentation, automated pr

    #   - name: プルリクエストの自動マージ（オプション）
    #     if: success()
    #     uses: peter-evans/enable-pull-request-automerge@v3
    #     with:
    #       token: ${{ secrets.GITHUB_TOKEN }}
    #       pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
    #       merge-method: squash
