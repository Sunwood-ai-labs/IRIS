name: リリース後のREADME更新

on:
  release:
    types: [published]

permissions:
  contents: write
  pull-requests: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: リポジトリのチェックアウト
        uses: actions/checkout@v3

      - name: Pythonのセットアップ
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: 依存関係のインストール
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/requirements.txt

      - name: READMEの更新
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          YOUR_PERSONAL_ACCESS_TOKEN: ${{ secrets.YOUR_PERSONAL_ACCESS_TOKEN }}
          YOUR_PERSONAL_ACCESS_TOKEN_IRIS: ${{ secrets.YOUR_PERSONAL_ACCESS_TOKEN_IRIS }}
        run: python .github/scripts/update_readme.py

      - name: Gitユーザー設定
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"

      - name: 変更の確認とコミット
        id: check_changes
        run: |
          git add README.md
          if git diff --staged --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            git commit -m "📝 リリース後のREADME更新"
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: 変更をプッシュしてプルリクエストを作成
        if: steps.check_changes.outputs.changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          branch_name="update-readme-${{ github.run_id }}"
          git checkout -b $branch_name
          git push -u origin $branch_name
          pr_url=$(gh pr create --title "📝 リリース後のREADME自動更新" --body "このプルリクエストは、最新のリリースに基づいてREADMEを自動更新したものです。内容を確認し、問題がなければマージしてください。" --base main --head $branch_name)
          echo "PR_URL=$pr_url" >> $GITHUB_ENV

      - name: プルリクエストの自動マージ
        if: steps.check_changes.outputs.changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -n "$PR_URL" ]; then
            pr_number=$(echo $PR_URL | awk -F'/' '{print $NF}')
            gh pr merge $pr_number --auto --squash --delete-branch
          else
            echo "プルリクエストのURLが見つかりません。マージをスキップします。"
          fi
